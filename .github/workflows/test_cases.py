# test_cases.py

import pytest

# Список тестовых примеров и ожидаемых результатов
test_cases = [
    ("12 + 15 / (3 + 2) * 4", 12 + 15 / (3 + 2) * 4),
    ("(2 + 3) * 5", (2 + 3) * 5),
    ("10 - 2 * 3", 10 - 2 * 3),
    ("(8 / 4) + (3 * 2)", (8 / 4) + (3 * 2)),
    ("5 * (2 + 3)", 5 * (2 + 3)),
    ("18 / (2 + 4)", 18 / (2 + 4)),
    ("(7 - 3) * (2 + 5)", (7 - 3) * (2 + 5)),
    ("(10 + 2) / 3", (10 + 2) / 3),
    ("3 * (4 + 2) - 5", 3 * (4 + 2) - 5),
    ("(9 + 1) * 2", (9 + 1) * 2),
    ("(5 + 5) * (2 - 1)", (5 + 5) * (2 - 1)),
    ("(6 * 2) + (3 * 4)", (6 * 2) + (3 * 4)),
    ("20 - (3 + 2)", 20 - (3 + 2)),
    ("(15 / 3) + (2 * 5)", (15 / 3) + (2 * 5)),
    ("(4 + 6) * (2 - 1)", (4 + 6) * (2 - 1)),
    ("(8 - 2) * (1 + 1)", (8 - 2) * (1 + 1)),
    ("(5 + 3) / 4", (5 + 3) / 4),
    ("(12 - 4) * (2 + 1)", (12 - 4) * (2 + 1)),
    ("(3 + 3) * (2 + 2)", (3 + 3) * (2 + 2)),
    ("(10 + 5) / (2 + 3)", (10 + 5) / (2 + 3)),
    ("(9 - 3) * (5 / 5)", (9 - 3) * (5 / 5)),
    ("(14 / 7) + (6 * 4)", (14 / 7) + (6 * 4)),
    ("(5 + 5) * (1 + 2)", (5 + 5) * (1 + 2)),
    ("(8 + 2) * (3 - 1)", (8 + 2) * (3 - 1)),
    ("(10 - 2) * (1 + 3)", (10 - 2) * (1 + 3)),
    ("(18 / 2) + (4 * 3)", (18 / 2) + (4 * 3)),
    ("(7 + 3) * (2 + 2)", (7 + 3) * (2 + 2)),
    ("(5 * 3) - (2 + 1)", (5 * 3) - (2 + 1)),
    ("(12 + 4) / (2 + 2)", (12 + 4) / (2 + 2)),
    ("(6 * 2) - (3 + 1)", (6 * 2) - (3 + 1)),
    ("(15 - 5) + (2 * 5)", (15 - 5) + (2 * 5)),
    ("(8 + 2) / (5 - 3)", (8 + 2) / (5 - 3)),
    ("(4 * 3) - (2 * 2)", (4 * 3) - (2 * 2)),
    ("(10 + 5) * (1 - 0)", (10 + 5) * (1 - 0)),
    ("(6 / 2) + (3 * 2)", (6 / 2) + (3 * 2)),
    ("(9 + 1) * (2 - 1)", (9 + 1) * (2 - 1)),
    ("(12 - 4) / (2 + 2)", (12 - 4) / (2 + 2)),
    ("(5 + 5) * (2 + 1)", (5 + 5) * (2 + 1)),
    ("(3 + 3) / (1 + 1)", (3 + 3) / (1 + 1)),
    ("(10 - 2) + (4 * 2)", (10 - 2) + (4 * 2)),
    ("(8 / 2) + (2 * 2)", (8 / 2) + (2 * 2)),
    ("(14 - 7) * (3 + 1)", (14 - 7) * (3 + 1)),
    ("(5 * 2) - (3 + 1)", (5 * 2) - (3 + 1)),
    ("(12 / 4) + (6 * 2)", (12 / 4) + (6 * 2)),
    ("(6 + 2) * (3 - 1)", (6 + 2) * (3 - 1)),
    ("(10 + 10) / (2 + 2)", (10 + 10) / (2 + 2)),
    ("(8 - 4) * (2 + 1)", (8 - 4) * (2 + 1)),
    ("(3 + 5) * (4 - 2)", (3 + 5) * (4 - 2)),
    ("(16 / 4) + (2 * 3)", (16 / 4) + (2 * 3)),
    ("(7 + 1) * (2 + 2)", (7 + 1) * (2 + 2)),
    ("(5 - 2) * (3 + 1)", (5 - 2) * (3 + 1)),
    ("(18 / 3) + (4 - 2)", (18 / 3) + (4 - 2)),
    ("(11 - 1) * (3 / 3)", (11 - 1) * (3 / 3)),
    ("(10 + 2) / (4 - 2)", (10 + 2) / (4 - 2)),
    ("(6 + 6) * (1 + 1)", (6 + 6) * (1 + 1)),
    ("(15 - 5) / (2 + 3)", (15 - 5) / (2 + 3)),
    ("(9 + 1) * (5 / 5)", (9 + 1) * (5 / 5)),
    ("(3 * 3) + (2 * 2)", (3 * 3) + (2 * 2)),
    ("(12 / 3) + (6 * 1)", (12 / 3) + (6 * 1)),
    ("(18 - 9) * (1 + 1)", (18 - 9) * (1 + 1)),
    ("(4 + 4) / (2 - 1)", (4 + 4) / (2 - 1)),
    ("(5 + 5) * (3 - 1)", (5 + 5) * (3 - 1)),
    ("(10 - 5) + (2 * 3)", (10 - 5) + (2 * 3)),
    ("(8 + 2) - (3 * 1)", (8 + 2) - (3 * 1)),
    ("(14 / 7) * (3 + 1)", (14 / 7) * (3 + 1)),
    ("(6 * 1) + (4 - 2)", (6 * 1) + (4 - 2)),
    ("(12 - 3) * (2 + 1)", (12 - 3) * (2 + 1)),
    ("(10 + 10) / (5 - 3)", (10 + 10) / (5 - 3)),
    ("(3 + 7) * (2 - 1)", (3 + 7) * (2 - 1)),
    ("(8 - 4) + (6 / 2)", (8 - 4) + (6 / 2)),
    ("(5 * 2) + (3 - 1)", (5 * 2) + (3 - 1)),
    ("(9 + 1) * (3 / 3)", (9 + 1) * (3 / 3)),
    ("(10 + 5) - (2 * 1)", (10 + 5) - (2 * 1)),
    ("(6 / 2) * (3 + 1)", (6 / 2) * (3 + 1)),
    ("(12 - 6) + (4 * 1)", (12 - 6) + (4 * 1)),
    ("(7 + 3) / (2 + 3)", (7 + 3) / (2 + 3)),
    ("(5 * 2) - (1 + 1)", (5 * 2) - (1 + 1)),
    ("(8 / 2) + (2 * 2)", (8 / 2) + (2 * 2)),
    ("(10 - 3) * (2 + 1)", (10 - 3) * (2 + 1)),
    ("(14 / 2) + (6 - 4)", (14 / 2) + (6 - 4)),
    ("(5 + 5) / (2 + 3)", (5 + 5) / (2 + 3)),
    ("(11 - 1) * (3 / 3)", (11 - 1) * (3 / 3)),
    ("(10 + 2) / (4 - 2)", (10 + 2) / (4 - 2)),
    ("(6 + 2) * (3 - 1)", (6 + 2) * (3 - 1)),
    ("(12 / 4) + (6 * 2)", (12 / 4) + (6 * 2)),
    ("(18 - 9) * (1 + 1)", (18 - 9) * (1 + 1)),
    ("(4 + 4) / (2 - 1)", (4 + 4) / (2 - 1)),
    ("(5 + 5) * (3 - 1)", (5 + 5) * (3 - 1)),
    ("(10 - 5) + (2 * 3)", (10 - 5) + (2 * 3)),
    ("(8 + 2) - (3 * 1)", (8 + 2) - (3 * 1)),
    ("(14 / 7) * (3 + 1)", (14 / 7) * (3 + 1)),
    ("(6 * 1) + (4 - 2)", (6 * 1) + (4 - 2)),
    ("(12 - 3) * (2 + 1)", (12 - 3) * (2 + 1)),
    ("(10 + 10) / (5 - 3)", (10 + 10) / (5 - 3)),
    ("(3 + 7) * (2 - 1)", (3 + 7) * (2 - 1)),
    ("(8 - 4) + (6 / 2)", (8 - 4) + (6 / 2)),
    ("(5 * 2) + (3 - 1)", (5 * 2) + (3 - 1)),
    ("(9 + 1) * (3 / 3)", (9 + 1) * (3 / 3)),
    ("(10 + 5) - (2 * 1)", (10 + 5) - (2 * 1)),
]

@pytest.mark.parametrize("expression, expected", test_cases)
def test_calc(expression, expected):
    from service.service_functions import calc
    assert calc(expression) == expected
